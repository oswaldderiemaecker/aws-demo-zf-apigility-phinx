{
	"AWSTemplateFormatVersion":"2010-09-09",
	"Description":"continuousphp AWS CloudFormation PHP Sample Template AutoScalingMultiAZWithNotifications and an RDS_Snapshot_On_Delete: Create a multi-az, load balanced and Auto Scaled sample web site running on an Apache Web Serever. The application is configured to span all Availability Zones in the region and is Auto-Scaled based on the CPU utilization of the web servers. Notifications will be sent to the operator email address on scaling events. The instances are load balanced with a simple health check against the default web page, a sample database create an RDS DBInstance that is snapshotted on stack deletion. **WARNING** This template creates one or more Amazon EC2 instances and an Elastic Load Balancer. You will be billed for the AWS resources used if you create a stack from this template.",
	"Parameters":{
		"InstanceType":{
			"Description":"WebServer EC2 instance type",
			"Type":"String",
			"Default":"t2.micro",
			"AllowedValues":[
				"t1.micro",
				"t2.nano",
				"t2.micro",
				"t2.small",
				"t2.medium",
				"t2.large",
				"m1.small",
				"m1.medium",
				"m1.large",
				"m1.xlarge",
				"m2.xlarge",
				"m2.2xlarge",
				"m2.4xlarge"
			],
			"ConstraintDescription":"must be a valid EC2 instance type."
		},
		"OperatorEMail":{
			"Description":"EMail address to notify if there are any scaling operations",
			"Type":"String",
			"AllowedPattern":"([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
			"ConstraintDescription":"must be a valid email address."
		},
		"KeyName":{
			"Description":"The EC2 Key Pair to allow SSH access to the instances",
			"Type":"AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription":"must be the name of an existing EC2 KeyPair."
		},
		"SSHLocation":{
			"Description":"The IP address range that can be used to SSH to the EC2 instances",
			"Type":"String",
			"MinLength":"9",
			"MaxLength":"18",
			"Default":"0.0.0.0/0",
			"AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription":"must be a valid IP CIDR range of the form x.x.x.x/x."
		},
		"RdsDBUserName":{
			"Description":"The RDS username",
			"Type":"String"
		},
		"RdsDBPassword":{
			"NoEcho":"true",
			"Description":"The RDS password",
			"Type":"String",
			"MinLength":"8",
			"MaxLength":"41",
			"AllowedPattern":"[a-zA-Z0-9]*"
		},
		"S3AppsBucket":{
			"Description":"The S3 Application Bucket",
			"Default":"mycompany-package-testing/testing",
			"Type":"String"
		}
		
	},
	"Mappings":{
		"AWSInstanceType2Arch":{
			"t2.nano":{
				"Arch":"HVM64"
			},
			"t2.micro":{
				"Arch":"HVM64"
			},
			"t2.small":{
				"Arch":"HVM64"
			},
			"t2.medium":{
				"Arch":"HVM64"
			},
			"t2.large":{
				"Arch":"HVM64"
			}
			
		},
		"AWSRegionArch2AMI":{
			"us-east-1":{
				"HVM64":"ami-a495eab3"
			},
			"us-west-2":{
				"HVM64":"ami-7172b611"
			},
			"us-west-1":{
				"HVM64":"ami-84cd82e4"
			},
			"eu-west-1":{
				"HVM64":"ami-f9dd458a"
			},
			"eu-central-1":{
				"HVM64":"ami-ea26ce85"
			},
			"ap-northeast-1":{
				"HVM64":"ami-374db956"
			},
			"ap-northeast-2":{
				"HVM64":"ami-2b408b45"
			},
			"ap-southeast-1":{
				"HVM64":"ami-a59b49c6"
			},
			"ap-southeast-2":{
				"HVM64":"ami-dc361ebf"
			},
			"sa-east-1":{
				"HVM64":"ami-6dd04501"
			},
			"cn-north-1":{
				"HVM64":"ami-8e6aa0e3"
			}
			
		}
		
	},
	"Resources":{
		"NotificationTopic":{
			"Type":"AWS::SNS::Topic",
			"Properties":{
				"Subscription":[
					{
						"Endpoint":{
							"Ref":"OperatorEMail"
						},
						"Protocol":"email"
					}
					
				]
				
			}
			
		},
		"WebServerRole":{
			"Type":"AWS::IAM::Role",
			"Properties":{
				"Path":"/application/",
				"AssumeRolePolicyDocument":{
					"Statement":[
						{
							"Effect":"Allow",
							"Principal":{
								"Service":[
									"ec2.amazonaws.com"
								]
								
							},
							"Action":"sts:AssumeRole"
						}
						
					]
					
				},
				"Policies":[
					{
						"PolicyName":"CodeDeploy",
						"PolicyDocument":{
							"Version":"2012-10-17",
							"Statement":[
								{
									"Effect":"Allow",
									"Action":[
										"autoscaling:Describe*",
										"autoscaling:EnterStandby",
										"autoscaling:ExitStandby"
									],
									"Resource":"*"
								},
								{
									"Effect":"Allow",
									"Action":[
										"s3:Get*",
										"s3:List*"
									],
									"Resource":{
										"Fn::Join":[
											"",
											[
												"arn:aws:s3:::",
												{
													"Ref":"S3AppsBucket"
												}
												,
												"/*"
											]
											
										]
										
									}
									
								}
								
							]
							
						}
						
					}
					
				]
				
			}
			
		},
		"WebServerProfile":{
			"Type":"AWS::IAM::InstanceProfile",
			"Properties":{
				"Path":"/application/",
				"Roles":[
					{
						"Ref":"WebServerRole"
					}
					
				]
				
			}
			
		},
		"WebServerGroup":{
			"Type":"AWS::AutoScaling::AutoScalingGroup",
			"Properties":{
				"AvailabilityZones":{
					"Fn::GetAZs":""
				},
				"LaunchConfigurationName":{
					"Ref":"LaunchConfig"
				},
				"MinSize":"1",
				"MaxSize":"2",
				"LoadBalancerNames":[
					{
						"Ref":"ElasticLoadBalancer"
					}
					
				],
				"NotificationConfiguration":{
					"TopicARN":{
						"Ref":"NotificationTopic"
					},
					"NotificationTypes":[
						"autoscaling:EC2_INSTANCE_LAUNCH",
						"autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
						"autoscaling:EC2_INSTANCE_TERMINATE",
						"autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
					]
					
				}
				
			},
			"DependsOn":"DBInstance"
		},
		"LaunchConfig":{
			"Type":"AWS::AutoScaling::LaunchConfiguration",
			"Properties":{
				"KeyName":{
					"Ref":"KeyName"
				},
				"ImageId":{
					"Fn::FindInMap":[
						"AWSRegionArch2AMI",
						{
							"Ref":"AWS::Region"
						},
						{
							"Fn::FindInMap":[
								"AWSInstanceType2Arch",
								{
									"Ref":"InstanceType"
								},
								"Arch"
							]
							
						}
						
					]
					
				},
				"SecurityGroups":[
					{
						"Ref":"InstanceSecurityGroup"
					}
					
				],
				"InstanceType":{
					"Ref":"InstanceType"
				},
				"IamInstanceProfile":{
					"Ref":"WebServerProfile"
				},
				"UserData":{
					"Fn::Base64":{
						"Fn::Join":[
							"",
							[
								"#!/bin/bash -xe\n",
								"mkdir -p /usr/local/etc/app/\n",
								"echo 'db.host=",
								{
									"Fn::GetAtt":[
										"DBInstance",
										"Endpoint.Address"
									]
									
								},
								"' >> /usr/local/etc/app/app.tmp.ini",
								"\n",
								"echo 'db.name=skeleton' >> /usr/local/etc/app/app.tmp.ini",
								"\n",
								"echo 'db.username=",
								{
									"Ref":"RdsDBUserName"
								},
								"' >> /usr/local/etc/app/app.tmp.ini",
								"\n",
								"echo 'db.password=",
								{
									"Ref":"RdsDBPassword"
								},
								"' >> /usr/local/etc/app/app.tmp.ini",
								"\n",
								"cp /usr/local/etc/app/app.tmp.ini /usr/local/etc/app/app.ini\n"
							]
							
						]
						
					}
					
				}
				
			}
			
		},
		"WebServerScaleUpPolicy":{
			"Type":"AWS::AutoScaling::ScalingPolicy",
			"Properties":{
				"AdjustmentType":"ChangeInCapacity",
				"AutoScalingGroupName":{
					"Ref":"WebServerGroup"
				},
				"Cooldown":"60",
				"ScalingAdjustment":"1"
			}
			
		},
		"WebServerScaleDownPolicy":{
			"Type":"AWS::AutoScaling::ScalingPolicy",
			"Properties":{
				"AdjustmentType":"ChangeInCapacity",
				"AutoScalingGroupName":{
					"Ref":"WebServerGroup"
				},
				"Cooldown":"60",
				"ScalingAdjustment":"-1"
			}
			
		},
		"CPUAlarmHigh":{
			"Type":"AWS::CloudWatch::Alarm",
			"Properties":{
				"AlarmDescription":"Scale-up if CPU > 90% for 10 minutes",
				"MetricName":"CPUUtilization",
				"Namespace":"AWS/EC2",
				"Statistic":"Average",
				"Period":"300",
				"EvaluationPeriods":"2",
				"Threshold":"90",
				"AlarmActions":[
					{
						"Ref":"WebServerScaleUpPolicy"
					}
					
				],
				"Dimensions":[
					{
						"Name":"AutoScalingGroupName",
						"Value":{
							"Ref":"WebServerGroup"
						}
						
					}
					
				],
				"ComparisonOperator":"GreaterThanThreshold"
			}
			
		},
		"CPUAlarmLow":{
			"Type":"AWS::CloudWatch::Alarm",
			"Properties":{
				"AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
				"MetricName":"CPUUtilization",
				"Namespace":"AWS/EC2",
				"Statistic":"Average",
				"Period":"300",
				"EvaluationPeriods":"2",
				"Threshold":"70",
				"AlarmActions":[
					{
						"Ref":"WebServerScaleDownPolicy"
					}
					
				],
				"Dimensions":[
					{
						"Name":"AutoScalingGroupName",
						"Value":{
							"Ref":"WebServerGroup"
						}
						
					}
					
				],
				"ComparisonOperator":"LessThanThreshold"
			}
			
		},
		"ElasticLoadBalancer":{
			"Type":"AWS::ElasticLoadBalancing::LoadBalancer",
			"Properties":{
				"AvailabilityZones":{
					"Fn::GetAZs":""
				},
				"CrossZone":"true",
				"Listeners":[
					{
						"LoadBalancerPort":"80",
						"InstancePort":"80",
						"Protocol":"HTTP"
					}
					
				],
				"HealthCheck":{
					"Target":"TCP:80",
					"HealthyThreshold":"3",
					"UnhealthyThreshold":"5",
					"Interval":"30",
					"Timeout":"5"
				}
				
			}
			
		},
		"InstanceSecurityGroup":{
			"Type":"AWS::EC2::SecurityGroup",
			"Properties":{
				"GroupDescription":"Enable SSH access and HTTP from the load balancer only",
				"SecurityGroupIngress":[
					{
						"IpProtocol":"tcp",
						"FromPort":"22",
						"ToPort":"22",
						"CidrIp":{
							"Ref":"SSHLocation"
						}
						
					},
					{
						"IpProtocol":"tcp",
						"FromPort":"80",
						"ToPort":"80",
						"SourceSecurityGroupOwnerId":{
							"Fn::GetAtt":[
								"ElasticLoadBalancer",
								"SourceSecurityGroup.OwnerAlias"
							]
							
						},
						"SourceSecurityGroupName":{
							"Fn::GetAtt":[
								"ElasticLoadBalancer",
								"SourceSecurityGroup.GroupName"
							]
							
						}
						
					}
					
				]
				
			}
			
		},
		"DBSecurityGroup":{
			"Type":"AWS::RDS::DBSecurityGroup",
			"Properties":{
				"DBSecurityGroupIngress":[
					{
						"EC2SecurityGroupName":{
							"Ref":"InstanceSecurityGroup"
						}
					}
				],
				"GroupDescription":"WebServer Access"
			}
		},
		"DBInstance":{
			"Type":"AWS::RDS::DBInstance",
			"Properties":{
				"DBName":"skeleton",
				"AllocatedStorage":"5",
				"DBInstanceClass":"db.t2.micro",
				"Engine":"MySQL",
				"MasterUsername":{
					"Ref":"RdsDBUserName"
				},
				"MasterUserPassword":{
					"Ref":"RdsDBPassword"
				},
				"DBSecurityGroups":[
					{
						"Ref":"DBSecurityGroup"
					}
					
				]
				
			},
			"DeletionPolicy":"Snapshot"
		}
		
	},
	"Outputs":{
		"URL":{
			"Description":"The URL of the website",
			"Value":{
				"Fn::Join":[
					"",
					[
						"http://",
						{
							"Fn::GetAtt":[
								"ElasticLoadBalancer",
								"DNSName"
							]
							
						}
						
					]
					
				]
				
			}
			
		},
		"RdsEndPoint":{
			"Description":"Endpoint of the database",
			"Value":{
				"Fn::Join":[
					"",
					[
						"",
						{
							"Fn::GetAtt":[
								"DBInstance",
								"Endpoint.Address"
							]
							
						},
						":",
						{
							"Fn::GetAtt":[
								"DBInstance",
								"Endpoint.Port"
							]
							
						}
						
					]
					
				]
				
			}
			
		}
		
	}
}